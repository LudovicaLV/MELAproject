/* Generated By:JavaCC: Do not edit this line. MELAprog4Constants.java */
package ParserProg4;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MELAprog4Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 7;
  /** RegularExpression Id. */
  int FLOAT = 8;
  /** RegularExpression Id. */
  int FLOAT_SCIENTIFIC = 9;
  /** RegularExpression Id. */
  int EXPONENT = 10;
  /** RegularExpression Id. */
  int LETTER = 11;
  /** RegularExpression Id. */
  int DIGIT = 12;
  /** RegularExpression Id. */
  int WORD = 13;
  /** RegularExpression Id. */
  int SECTION_SPACE = 14;
  /** RegularExpression Id. */
  int SECTION_PARAM = 15;
  /** RegularExpression Id. */
  int SECTION_AGENTS = 16;
  /** RegularExpression Id. */
  int SECTION_ENV = 17;
  /** RegularExpression Id. */
  int SECTION_INIT = 18;
  /** RegularExpression Id. */
  int GRAPH = 19;
  /** RegularExpression Id. */
  int VERTICES = 20;
  /** RegularExpression Id. */
  int EDGES = 21;
  /** RegularExpression Id. */
  int ONED = 22;
  /** RegularExpression Id. */
  int TWOD = 23;
  /** RegularExpression Id. */
  int THREED = 24;
  /** RegularExpression Id. */
  int KEYWORD_SPACE = 25;
  /** RegularExpression Id. */
  int KEYWORD_LOC = 26;
  /** RegularExpression Id. */
  int KEYWORD_NEIGH = 27;
  /** RegularExpression Id. */
  int KEYWORD_ALL = 28;
  /** RegularExpression Id. */
  int INFSET = 29;
  /** RegularExpression Id. */
  int EOL = 30;
  /** RegularExpression Id. */
  int PLUS = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int SEMICOLON = 33;
  /** RegularExpression Id. */
  int DEFINE = 34;
  /** RegularExpression Id. */
  int ASSIGN = 35;
  /** RegularExpression Id. */
  int LSQ = 36;
  /** RegularExpression Id. */
  int RSQ = 37;
  /** RegularExpression Id. */
  int LR = 38;
  /** RegularExpression Id. */
  int RR = 39;
  /** RegularExpression Id. */
  int QUO = 40;
  /** RegularExpression Id. */
  int SQUO = 41;
  /** RegularExpression Id. */
  int QUEST = 42;
  /** RegularExpression Id. */
  int EXCL = 43;
  /** RegularExpression Id. */
  int LBRAC = 44;
  /** RegularExpression Id. */
  int RBRAC = 45;
  /** RegularExpression Id. */
  int COMMA = 46;
  /** RegularExpression Id. */
  int LANG = 47;
  /** RegularExpression Id. */
  int RANG = 48;
  /** RegularExpression Id. */
  int PARALLEL = 49;
  /** RegularExpression Id. */
  int UPARROW = 50;
  /** RegularExpression Id. */
  int DOWNARROW = 51;
  /** RegularExpression Id. */
  int DASH = 52;
  /** RegularExpression Id. */
  int MELASYMBOL = 53;
  /** RegularExpression Id. */
  int INT = 54;
  /** RegularExpression Id. */
  int DOUBLE = 55;
  /** RegularExpression Id. */
  int IDENTIFIER = 56;
  /** RegularExpression Id. */
  int UPDATE_LOC = 57;
  /** RegularExpression Id. */
  int MATH_EXPR = 58;
  /** RegularExpression Id. */
  int SPACE = 59;
  /** RegularExpression Id. */
  int M_AND = 60;
  /** RegularExpression Id. */
  int M_OR = 61;
  /** RegularExpression Id. */
  int M_LINER = 62;
  /** RegularExpression Id. */
  int M_LINEN = 63;
  /** RegularExpression Id. */
  int MATH_PARAM = 64;
  /** RegularExpression Id. */
  int SYMBOL = 65;
  /** RegularExpression Id. */
  int PARAM_SYMBOL = 66;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int RESET = 1;
  /** Lexical state. */
  int ID = 2;
  /** Lexical state. */
  int MATH = 3;
  /** Lexical state. */
  int SIMPLE_MATH = 4;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER>",
    "<FLOAT>",
    "<FLOAT_SCIENTIFIC>",
    "<EXPONENT>",
    "<LETTER>",
    "<DIGIT>",
    "<WORD>",
    "\"#Space\"",
    "\"#Parameters\"",
    "\"#Agents\"",
    "\"#Environment\"",
    "\"#Initial conditions\"",
    "\"Graph\"",
    "\"V\"",
    "\"E\"",
    "\"OneD\"",
    "\"TwoD\"",
    "\"ThreeD\"",
    "<KEYWORD_SPACE>",
    "\"l\"",
    "\"N(l)\"",
    "\"all\"",
    "<INFSET>",
    "\";\"",
    "\"+\"",
    "\".\"",
    "\":\"",
    "\":=\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"?\"",
    "\"!\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\"<\"",
    "\">\"",
    "\"||\"",
    "\">>\"",
    "\"<<\"",
    "\"-\"",
    "<MELASYMBOL>",
    "<INT>",
    "<DOUBLE>",
    "<IDENTIFIER>",
    "<UPDATE_LOC>",
    "<MATH_EXPR>",
    "<SPACE>",
    "\"&&\"",
    "\"|\"",
    "\"\\r\"",
    "\"\\n\"",
    "<MATH_PARAM>",
    "<SYMBOL>",
    "<PARAM_SYMBOL>",
  };

}
